{"version":3,"file":"word-cloud.component.js","sourceRoot":"","sources":["../../../components/charts/word-cloud/word-cloud.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {Component, Input, NgZone, OnChanges, OnInit, SimpleChanges} from '@angular/core';\nimport {Chart} from 'angular-highcharts';\n\nimport * as highC from 'highcharts/js/highcharts.js';\n\n@Component({\n  selector: 'dash-word-cloud',\n    styles: [\n        '.wCloudHolder {}'\n    ],\n    template: `<div [chart]=\"wordCloudChart\" class=\"wCloudHolder\"></div>`\n})\nexport class WordCloudComponent implements OnChanges, OnInit {\n\n  @Input() chartTitle = '';\n  @Input() text = '';\n\n  @Input() minOccurences;\n\n  public wordCloudChart;\n\n  constructor(private zone: NgZone) {\n  }\n\n  ngOnInit() {\n    if (this.text) {\n      this.wordCloudChart = this.getWordCloudChart(this.text);\n    }\n  }\n\n  private getWordCloudChart(text) {\n    let seriesData = this.createDataFromText(text);\n\n    return new Chart({\n      chart: {\n        // width: 600,\n        // height: 400\n      },\n      series: [{\n        type: 'wordcloud',\n        data: seriesData,\n        name: 'Occurrences'\n      }],\n      title: {\n        text: this.chartTitle\n      }\n    });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['text'] && !changes['text'].firstChange) {\n      this.zone.run(() => {\n        this.wordCloudChart = this.getWordCloudChart(changes['text'].currentValue);\n      });\n    }\n  }\n\n  private createDataFromText(text: string) {\n    let lines = text.split(/[,\\. ]+/g);\n    let realLines: any[] = [];\n    for (let line of lines) {\n      if (line && line.length > 3) {\n        realLines.push(line);\n      }\n    }\n\n    let data = highC.reduce(realLines, function (arr, word) {\n      let obj = highC.find(arr, function (object) {\n        return object.name === word;\n      });\n      if (obj) {\n        obj.weight += 1;\n      } else {\n        obj = {\n          name: word,\n          weight: 1\n        };\n        arr.push(obj);\n      }\n      return arr;\n    }, []);\n\n    if (this.minOccurences) {\n      let filteredData: any[] = [];\n      for (let wordElement of data) {\n        if (wordElement['weight'] > this.minOccurences) {\n          filteredData.push(wordElement);\n        }\n      }\n      if (filteredData.length > 0) {\n        data = filteredData;\n      }\n    }\n    return data;\n  }\n\n}\n"]}